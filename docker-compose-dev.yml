# compose config for running images based on local files
services:
  jupyter:
    container_name: qs-jupyter
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-notebook
    profiles: ["jupyter", "full"]
    ports:
      - 8888:8888
    environment:
      - JUPYTER_TOKEN=123
      - GATEWAY_HOST=http://gateway:8000
    networks:
      - safe-tier
  ray-head:
    container_name: ray-head
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-ray-qiskit
      args:
        TARGETARCH: "${TARGETARCH:-amd64}"
    entrypoint: [
      "env", "RAY_LOG_TO_STDERR=1", "ray", "start", "--head", "--port=6379",
      "--dashboard-host=0.0.0.0", "--block"
    ]
    ports:
      - 8265:8265
    privileged: true
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - safe-tier
  postgres:
    image: postgres
    environment:
      POSTGRES_DB: testkeycloakdb
      POSTGRES_USER: testkeycloakuser
      POSTGRES_PASSWORD: testkeycloakpassword
    networks:
      - safe-tier
    restart:
      always
  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:20.0.5-debian-11-r4
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    environment:
      KEYCLOAK_DATABASE_HOST: postgres
      KEYCLOAK_DATABASE_NAME: testkeycloakdb
      KEYCLOAK_DATABASE_USER: testkeycloakuser
      KEYCLOAK_DATABASE_SCHEMA: public
      KEYCLOAK_DATABASE_PASSWORD: testkeycloakpassword
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: 123
      KEYCLOAK_HTTP_PORT: 8080
      KEYCLOAK_EXTRA_ARGS: "-Dkeycloak.import=/opt/keycloak/data/import/realm-export.json"
    ports:
      - 8085:8080
    depends_on:
      - postgres
    networks:
      - safe-tier
    restart:
      always
  gateway:
    container_name: gateway
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-gateway
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000 --workers=4
    ports:
      - 8000:8000
    environment:
      - DEBUG=1
      - RAY_HOST=http://ray-head:8265
      - CLIENT_ID=gateway-client
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=123
      - DJANGO_SUPERUSER_EMAIL=admin@noemail.com
      - SETTING_KEYCLOAK_URL=http://keycloak:8080
      - SETTING_KEYCLOAK_REALM=quantumserverless
      - SETTINGS_KEYCLOAK_CLIENT_SECRET=supersecret
      - SITE_HOST=http://gateway:8000
#      - SETTINGS_AUTH_MECHANISM=default #custom_token
#      - SETTINGS_TOKEN_AUTH_URL=<URL_FOR_TOKEN_VERIFICATION>
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=testkeycloakdb
      - DATABASE_USER=testkeycloakuser
      - DATABASE_PASSWORD=testkeycloakpassword
    networks:
      - safe-tier
    volumes:
      - program-artifacts:/usr/src/app/media/
    depends_on:
      - keycloak
      - postgres
  scheduler:
    container_name: scheduler
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-gateway
    entrypoint: "./scripts/scheduler.sh"
    environment:
      - DEBUG=0
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=testkeycloakdb
      - DATABASE_USER=testkeycloakuser
      - DATABASE_PASSWORD=testkeycloakpassword
      - RAY_CLUSTER_MODE_LOCAL_HOST=http://ray-head:8265
      - RAY_CLUSTER_MODE_LOCAL=1
    networks:
      - safe-tier
    volumes:
      - program-artifacts:/usr/src/app/media/
    depends_on:
      - keycloak
      - postgres
  repository-server:
    container_name: repository-server
    build:
      context: ./
      dockerfile: infrastructure/docker/Dockerfile-repository-server
    profiles: [ "full", "repo" ]
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8060 --workers=4
    ports:
      - 8060:8060
    environment:
      - DEBUG=1
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=123
      - DJANGO_SUPERUSER_EMAIL=admin@noemail.com
      - DATABASE_HOST=repository-postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=repository_db
      - DATABASE_USER=repository_user
      - DATABASE_PASSWORD=repository_password
    depends_on:
      - postgres
    networks:
      - safe-tier
  repository-postgres:
    image: postgres
    profiles: [ "full", "repo" ]
    environment:
      POSTGRES_DB: repository_db
      POSTGRES_USER: repository_user
      POSTGRES_PASSWORD: repository_password
    networks:
      - safe-tier
    restart:
      always
  prometheus:
    image: prom/prometheus:v2.44.0
    profiles: [ "full" ]
    ports:
      - 9000:9090
  loki:
    image: grafana/loki:2.8.2
    profiles: [ "full" ]
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - safe-tier
  promtail:
    image: grafana/promtail:2.8.2
    profiles: [ "full" ]
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - safe-tier
  grafana:
    image: grafana/grafana:latest
    profiles: [ "full" ]
    ports:
      - 3000:3000
    networks:
      - safe-tier
networks:
  safe-tier:
volumes:
  program-artifacts:
