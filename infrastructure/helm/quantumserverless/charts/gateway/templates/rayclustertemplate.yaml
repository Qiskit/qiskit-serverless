apiVersion: v1
data:
  rayclustertemplate.yaml: |
    apiVersion: ray.io/v1alpha1
    kind: RayCluster
    metadata:
      name: {{`{{ cluster_name }}`}}
      namespace: {{ .Release.Namespace }}
    spec:
      headGroupSpec:
        rayStartParams:
          dashboard-host: 0.0.0.0
        serviceType: ClusterIP
        template:
          spec:
            initContainers:
              # Generate head's private key and certificate before `ray start`.
              - name: ray-head-tls
                image: rayproject/ray:2.4.0
                command: ["/bin/sh", "-c", "cp -R /etc/ca/tls /etc/ray && /etc/gen/tls/gencert_head.sh"]
                volumeMounts:
                  - mountPath: /etc/ca/tls
                    name: ca-tls
                    readOnly: true
                  - mountPath: /etc/ray/tls
                    name: ray-tls
                  - mountPath: /etc/gen/tls
                    name: gen-tls-script
                env:
                  - name: POD_IP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.podIP
            affinity:
            containers:
            - image: {{  .Values.application.ray.nodeImage | quote  }}
              imagePullPolicy: IfNotPresent
              name: ray-head
              ports:
              - containerPort: 6379
                name: gcs
                protocol: TCP
              - containerPort: 8265
                name: dashboard
                protocol: TCP
              - containerPort: 10001
                name: client
                protocol: TCP
              resources:
                limits:
                  cpu: {{ .Values.application.ray.cpu }}
                  memory: {{ .Values.application.ray.memory }}Gi
                requests:
                  cpu: {{ .Values.application.ray.cpu }}
                  memory: {{ .Values.application.ray.memory }}Gi
              securityContext:
              volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
              - mountPath: /etc/ca/tls
                name: ca-tls
                readOnly: true
              - mountPath: /etc/ray/tls
                name: ray-tls
              - mountPath: /data
                name: user-storage
                subPath: {{`{{ user_id }}`}}
              env:
                # Environment variables for Ray TLS authentication.
                # See https://docs.ray.io/en/latest/ray-core/configure.html#tls-authentication for more details.
                - name: RAY_USE_TLS
                  value: "1"
                - name: RAY_TLS_SERVER_CERT
                  value: "/etc/ray/tls/tls.crt"
                - name: RAY_TLS_SERVER_KEY
                  value: "/etc/ray/tls/tls.key"
                - name: RAY_TLS_CA_CERT
                  value: "/etc/ca/tls/ca.crt"                
            - image: fluent/fluent-bit:1.9.10
              name: ray-head-logs
              resources:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
              - mountPath: /fluent-bit/etc/fluent-bit.conf
                name: fluentbit-config
                subPath: fluent-bit.conf
            imagePullSecrets: []
            nodeSelector:
            tolerations: []
            volumes:
            - emptyDir:
              name: log-volume
            - configMap:
                name: fluentbit-config
              name: fluentbit-config
            # Secret `ca-tls` has the information of CA's private key and certificate.
            - name: ca-tls
              secret:
                secretName: ca-tls
            - name: ray-tls
              emptyDir: {}
            # `gencert_head.sh` is a script to generate head Pod's private key and head's certificate.
            - name: gen-tls-script
              configMap:
                name: tls
                defaultMode: 0777
                items:
                - key: gencert_head.sh
                  path: gencert_head.sh
            - name: user-storage
              persistentVolumeClaim:
                claimName: gateway-claim
      workerGroupSpecs:
      - groupName: smallWorkerGroup
        maxReplicas: 4
        minReplicas: 1
        rayStartParams:
          block: 'true'
        replicas: 1
        template:
          spec:
            initContainers:
              # Generate worker's private key and certificate before `ray start`.
              - name: ray-worker-tls
                image: rayproject/ray:2.4.0
                command: ["/bin/sh", "-c", "cp -R /etc/ca/tls /etc/ray && /etc/gen/tls/gencert_worker.sh"]
                volumeMounts:
                  - mountPath: /etc/ca/tls
                    name: ca-tls
                    readOnly: true
                  - mountPath: /etc/ray/tls
                    name: ray-tls
                  - mountPath: /etc/gen/tls
                    name: gen-tls-script
                env:
                  - name: POD_IP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.podIP
            affinity:
            containers:
            - resources:
                limits:
                  cpu: 1
                  memory: 2G
                requests:
                  cpu: 1
                  memory: 2G
              securityContext: {}
              volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
              - mountPath: /etc/ca/tls
                name: ca-tls
                readOnly: true
              - mountPath: /etc/ray/tls
                name: ray-tls
              env:
                # Environment variables for Ray TLS authentication.
                # See https://docs.ray.io/en/latest/ray-core/configure.html#tls-authentication for more details.
                - name: RAY_USE_TLS
                  value: "1"
                - name: RAY_TLS_SERVER_CERT
                  value: "/etc/ray/tls/tls.crt"
                - name: RAY_TLS_SERVER_KEY
                  value: "/etc/ray/tls/tls.key"
                - name: RAY_TLS_CA_CERT
                  value: "/etc/ca/tls/ca.crt"
              image: {{ .Values.application.ray.nodeImage | quote}}
              imagePullPolicy: IfNotPresent
              name: ray-worker
              resources:
                limits:
                  cpu: {{ .Values.application.ray.cpu }}
                  memory: {{ .Values.application.ray.memory }}Gi
                requests:
                  cpu: {{ .Values.application.ray.cpu }}
                  memory: {{ .Values.application.ray.memory }}Gi
              securityContext:
              volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
              - mountPath: /data
                name: user-storage
                subPath: {{`{{ user_id }}`}}
            imagePullSecrets: []
            nodeSelector:
            tolerations: []
            volumes:
            - emptyDir:
              name: log-volume
            - name: ca-tls
              secret:
                secretName: ca-tls
            - name: ray-tls
              emptyDir: {}
            # `gencert_worker.sh` is a script to generate worker Pod's private key and worker's certificate.
            - name: gen-tls-script
              configMap:
                name: tls
                defaultMode: 0777
                # An array of keys from the ConfigMap to create as files
                items:
                - key: gencert_worker.sh
                  path: gencert_worker.sh
            - name: user-storage
              persistentVolumeClaim:
                claimName: gateway-claim
kind: ConfigMap
metadata:
  name: rayclustertemplate
