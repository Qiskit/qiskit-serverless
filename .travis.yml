---
os: linux
arch: amd64
dist: focal

env:
  global:
    - IBMCLOUD_API_KEY: ${IBM_CLOUD_API_KEY} # We should use this non-standard variable because the IaC code base.

stages:
  - name: checks
    if: type IN (push)
  - name: docker image
    if: type IN (pull_request)
  - name: docker release
    if: type IN (push, api) AND (branch = staging OR branch = production)
  - name: deploy staging
    if: type IN (push,api) AND branch = staging
  - name: deploy production
    if: type IN (push,api) AND branch = production
  - name: ASoC static security scan
    if: type IN (cron,api)
  - name: ASoC dynamic security scan
    if: type IN (cron,api)

jobs:
  include:
    - stage: checks
      name: docker/lint-gateway
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/lint-gateway
    
    - stage: checks
      name: docker/lint-ray
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/lint-ray
    
    - stage: checks
      name: docker/lint-repository
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/lint-repository
    
    - stage: checks
      name: docker/sast-gateway
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/sast-gateway
    
    - stage: checks
      name: docker/sast-ray
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/sast-ray
    
    - stage: checks
      name: docker/sast-repository
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/sast-repository

    - stage: checks
      name: helm/check-staging
      language: minimal
      install: skip
      services: docker
      env:
        - ENVIRONMENT: staging
      script:
        - make docker/sast-repository
    
    - stage: checks
      name: helm/check-production
      language: minimal
      install: skip
      services: docker
      env:
        - ENVIRONMENT: production
      script:
        - make docker/sast-repository

    - stage: docker image
      name: docker/vscan-gateway
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/vscan-gateway

    - stage: docker image
      name: docker/vscan-ray-py38
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/vscan-ray-py38

    - stage: docker image
      name: docker/vscan-ray-py39
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/vscan-ray-py39
    
    - stage: docker image
      name: docker/vscan-ray-py310
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/vscan-ray-py310

    - stage: docker image
      name: docker/vscan-repository
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/vscan-repository

    - stage: docker release
      name: docker/release-selector
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/release-selector

    - stage: deploy staging
      name: deploy/staging
      language: minimal
      install: skip
      services: docker
      env:
        - ENVIRONMENT: staging
      script:
        - make helm/deploy

    - stage: deploy production
      name: deploy/production
      language: minimal
      install: skip
      services: docker
      env:
        - ENVIRONMENT: production
      script:
        - make helm/deploy

    - stage: ASoC static security scan
      name: security/asoc-static
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/asoc-static-scan

    - stage: ASoC dynamic security scan
      name: security/asoc-dynamic
      language: minimal
      install: skip
      services: docker
      script:
        - make docker/asoc-dynamic-scan
