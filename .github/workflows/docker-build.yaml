name: Docker notebook tests

on:
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      - name: Build the containers
        run: docker compose -f docker-compose-dev.yaml build
      - name: Run the jupyter profile
        run: docker compose -f docker-compose-dev.yaml up -d
      - name: Give containers time to initialize
        shell: bash
        run: sleep 90
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: install dependencies
        shell: bash
        run: pip install client/
      - name: Run basic tests
        shell: bash
        run: |
          cd tests/basic
          for f in *.py; do echo "$f" && python "$f" &>> basic.log; done
          done=$(cat basic.log | grep -c "DONE")
          if [[ $done == 4 ]]
          then
            echo "OK"
            exit 0
          else
            echo "FAILED: One or more programs failed during execution"
            cat basic.log
            exit 1
          fi
          done=$(cat basic.log | grep -c "Completed running pattern")
          if [[ $done == 2 ]]
          then
            echo "OK"
            exit 0
          else
            echo "FAILED: One or more programs failed during execution"
            cat basic.log
            exit 1
          fi
          cd -
      - name: Run experimental tests
        shell: bash
        run: |
          cd tests/experimental
          for f in *.py; do echo "$f" && python "$f" &>> experimental.log; done
          done=$(cat experimental.log | grep -c "DONE")
          if [[ $done == 6 ]]
          then
            echo "OK"
            exit 0
          else
            echo "not OK"
            cat experimental.log
            exit 1
          fi
          cd -
      - name: Dump logs on failure
        if: ${{ failure() }}
        run: |
          docker compose logs gateway
