name: Test QS on Kubernetes

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4
      # - name: Install Kind
      #   run: |
      #     curl -Lo ./kind "https://github.com/kubernetes-sigs/kind/releases/download/v0.29.0/kind-$(uname)-amd64"
      #     chmod +x ./kind
      #     sudo mv kind /usr/local/bin
      #     which kind
      - name: Create Kind cluster
        uses: chainguard-dev/actions/setup-kind@main
        with:
          k8s-version: 1.33.x
          kind-version: 0.29.0
          kind-worker-count: 0
      - name: Label nodes
        run: kubectl label node kind-control-plane has-gpu=gpu has-cpu=cpu
      - name: Build and load gateway
        run: |
          docker build -t gateway:test -f ./gateway/Dockerfile .
          kind load docker-image gateway:test
          docker image rm gateway:test
      - name: Build and load ray node
        run: |
          docker build --build-arg DYNAMIC_DEPENDENCIES_FILE=requirements-test-dynamic-dependencies.txt -t ray:test -f ./Dockerfile-ray-node .
          kind load docker-image ray:test
          docker image rm ray:test
      - name: Install helm chart
        run: |
          cd charts/qiskit-serverless
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add kuberay https://ray-project.github.io/kuberay-helm
          helm dependency build
          helm install qs \
            --set platform=kind \
            --set nginxIngressControllerEnable=false \
            --set gateway.image.repository=gateway \
            --set gateway.image.tag=test \
            --set gateway.application.ray.nodeImage=ray:test \
            --set gateway.application.ray.cpu=1 \
            --set gateway.application.ray.memory=3 \
            --set gateway.application.debug=1 \
            --set gateway.application.authMockproviderRegistry=test \
            --set gateway.application.dependencies.dynamicDependencies=requirements-test-dynamic-dependencies.txt \
            .
          GATEWAY=$(kubectl get pod -l app.kubernetes.io/name=gateway -o name)
          kubectl wait --for=condition=Ready "$GATEWAY" --timeout 5m
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          cd client
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run tests
        run: |
          kubectl patch svc gateway -p '{"spec": {"type": "LoadBalancer"}}'
          export GATEWAY_HOST="http://$(kubectl get svc gateway -o jsonpath="{.status.loadBalancer.ingress[0].ip}"):8000"
          echo $GATEWAY_HOST
          # basic tests
          cd /home/runner/work/qiskit-serverless/qiskit-serverless/tests/basic
          rm 06_function.py
          for f in *.py; do echo "TEST: $f" && python "$f"; done
          # experimental tests
          cd /home/runner/work/qiskit-serverless/qiskit-serverless/tests/experimental
          for f in *.py; do echo "TEST: $f" && python "$f"; done
      - uses: chainguard-dev/actions/kind-diag@main
        # Only upload logs on failure.
        if: ${{ failure() }}
        with:
          cluster-resources: nodes,namespaces,crds
          namespace-resources: configmaps,pods,svc,pvc,ingress
          artifact-name: logs-${{ github.run_id }}
