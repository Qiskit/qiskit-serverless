# ===================
# Qiskit Serverless Info
# ===================
global:
  version: 0.19.0

# ===================
# Qiskit Serverless configs
# ===================
platform: default

# ===================
# Ingress Nginx controller configs
# ===================

# Ingress Nginx controller is disabled by default to not affect cloud providers' controller configuration
nginxIngressControllerEnable: false
nginx-ingress-controller:
  nameOverride: "nginx-ingress-controller"
  fullnameOverride: "nginx-ingress-controller"
ingress:
  className: "nginx"
  annotations:
    # For IBM Cloud the valid ingress class values are: public-iks-k8s-nginx and private-iks-k8s-nginx
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "512k"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
  tls: []
#  tls:
#    - hosts:
#      - "qiskit-serverless-url.cloud"
#      secretName: "tls-secret-name"
  hosts: []
#  hosts:
#    - host: "qiskit-serverless-url.cloud"

# ===================
# Gateway configs
# ===================

gatewayEnable: true
gateway:
  nameOverride: "gateway"
  fullnameOverride: "gateway"
  useCertManager: false

  image:
    repository: "icr.io/quantum-public/qiskit-serverless/gateway"
    pullPolicy: IfNotPresent
    tag: "0.19.0"
  application:
    siteHost: "http://gateway:8000"
    rayHost: "http://kuberay-head-svc:8265"
    auth:
      mechanism: mock_token
    superuser:
      enable: true
    service:
      type: ClusterIP
      port: 8000
    ray:
      nodeImage: "icr.io/quantum-public/qiskit-serverless/ray-node:0.19.0"
      opensslImage: registry.access.redhat.com/ubi8/openssl:8.9-13
      kubectlImage: alpine/k8s:1.29.13
      gpuJobsConfig: "/tmp/gpujobs/gpu-jobs.json"
    limits:
      maxJobsPerUser: 2
      maxComputeResources: 4
    nodeSelector:
      cpu: "has-cpu: cpu"
      gpu: "has-gpu: gpu"
  cos:
    claimName: gateway-claim

  secrets:
    secretKey:
      create: true
      name: gateway-secret-key
      key: django-secret-key
      value: CHANGE_ME
    servicePsql:
      create: true
      name: service-psql-binding
      key:
        adminPassword: admin-password
        databaseName: database-name
        databasePassword: database-password
        host: database-host
        port: database-port
        userName: user-name
      value:
        databaseName: serverlessdb
        databasePassword: serverlesspassword
        host: "postgresql"
        port: 5432
        userName: serverlessuser
    superuser:
      create: true
      name: gateway-superuser
      key:
        name: name
        password: password
        email: email
      value:
        name: admin
        password: passw0rd
        email: admin@examplemail.io

# ===================
# Kuberay Operator
# ===================

kuberayOperatorEnable: true
kuberay-operator:
  image:
    repository: quay.io/kuberay/operator
    tag: v1.1.1
    pullPolicy: IfNotPresent

# ===================
# PostgreSQL
# ===================

postgresqlEnable: true
postgresql:
  nameOverride: "postgresql"
  fullnameOverride: "postgresql"
  auth:
    enablePostgresUser: false
    database: serverlessdb
    username: serverlessuser
    password: serverlesspassword

# ===================
# PVC
# ===================

createPvc: true
storageClassName: manual
claimName: gateway-claim
cos:
  bucket: BUCKETNAME-CHANGEME
  endpoint: ENDPOINT-CHANGEME
  secretName: SECRETNAME-CHANGEME
  storageSize: 10Gi
