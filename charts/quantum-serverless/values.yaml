# ===================
# Quantum Serverless configs
# ===================
platform: default

# ===================
# Ingress Nginx controller configs
# ===================

# Ingress Nginx controller is disabled by default to not affect cloud providers' controller configuration
nginxIngressControllerEnable: true
nginx-ingress-controller:
  nameOverride: "nginx-ingress-controller"
  fullnameOverride: "nginx-ingress-controller"
ingress:
  annotations:
    # For IBM Cloud the valid ingress class values are: public-iks-k8s-nginx and private-iks-k8s-nginx
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "512k"
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
  tls: []
#  tls:
#    - hosts:
#      - "quantum-serverless-url.cloud"
#      secretName: "tls-secret-name"
  hosts: []
#  hosts:
#    - host: "quantum-serverless-url.cloud"

# ===================
# Gateway configs
# ===================

gatewayEnable: true
gateway:
  nameOverride: "gateway"
  fullnameOverride: "gateway"
  useCertManager: false

  image:
    repository: "icr.io/quantum-public/quantum-serverless-gateway"
    pullPolicy: IfNotPresent
    tag: "0.6.0"
  application:
    siteHost: "http://gateway:8000"
    rayHost: "http://kuberay-head-svc:8265"
    auth:
      keycloak:
        clientId: "gateway-client"
        url: "http://keycloak:31059"
        realm: "quantum-serverless"
        clientSecret: GATEWAYSECRET-CHANGEME
    superuser:
      enable: true
    service:
      type: ClusterIP
      port: 8000
    ray:
      nodeImage: "icr.io/quantum-public/quantum-serverless-ray-node:0.6.0-py39"
      opensslImage: registry.access.redhat.com/ubi8/openssl:8.8-7
      kubectlImage: alpine/k8s:1.28.1@sha256:c37a54b738e4d26f88d4a4d28680bb74dfea1d0e756f039dad900306abc837a8
    limits:
      maxJobsPerUser: 2
      maxComputeResources: 4
  cos:
    claimName: gateway-claim

  secrets:
    secretKey:
      create: true
      name: gateway-secret-key
      key: django-secret-key
      value: CHANGE_ME
    servicePsql:
      create: true
      name: service-psql-binding
      key:
        databaseName: database-name
        databasePassword: database-password
        host: database-host
        port: database-port
        userName: user-name
      value:
        databaseName: CHANGE_ME
        databasePassword: CHANGE_ME
        host: CHANGE_ME
        port: CHANGE_ME
        userName: CHANGE_ME
    superuser:
      create: false
      name: gateway-superuser
      key:
        name: name
        password: password
        email: email
      value:
        name: admin
        password: passw0rd
        email: admin@examplemail.io

# ===================
# Jupyter configs
# ===================

jupyterEnable: true
jupyter:
  nameOverride: "jupyter"
  fullnameOverride: "jupyter"

  jupyterToken: "YOUR_JUPYTER_PASSWORD_HERE"

  image:
    repository: "icr.io/quantum-public/quantum-serverless-notebook"
    tag: "0.6.0-py39"
    pullPolicy: IfNotPresent
  container:
    port: 8888
  service:
    port: 80

# ===================
# Kuberay Operator
# ===================

kuberayOperatorEnable: true
kuberay-operator:
  image:
    repository: kuberay/operator
    tag: v0.6.0
    pullPolicy: IfNotPresent

# ===================
# Keycloak
# ===================

keycloakEnable: true
gatewayClientSecret: GATEWAYSECRET-CHANGEME
grafanaClientSecret: GRAFANASECRET-CHANGEME
keycloakUserID: user
keycloakUserPassword: password123
keycloak:
  nameOverride: "keycloak"
  fullnameOverride: "keycloak"

  logging:
    level: DEBUG
  service:
    type: ClusterIP
    ports:
      http: 31059
  auth:
    adminUser: admin
    adminPassword: passw0rd
  extraVolumes:
    - name: realm
      configMap:
        name: keycloakrealm
  extraVolumeMounts:
    - name: realm
      mountPath: /opt/bitnami/keycloak/data/import
  extraStartupArgs: "--import-realm"

  postgresql:
    nameOverride: "postgresql"
    fullnameOverride: "postgresql"
    primary:
      initdb:
        scripts:
          create_db.sh: |
            #!/bin/bash
            PGUSER=$POSTGRES_USER PGPASSWORD=$POSTGRES_PASSWORD createdb -w "repository_db"
            PGUSER=$POSTGRES_USER PGPASSWORD=$POSTGRES_PASSWORD createdb -w "gateway_db"

# ===================
# Quantum Repository
# ===================

repositoryEnable: true
repository:
  nameOverride: "repository"
  fullnameOverride: "repository"
  image:
    pullPolicy: IfNotPresent
    tag: "0.6.0"
  application:
    superuser:
      username: "admin"
      password: "passw0rd"
      email: "admin@examplemail.io"
  service:
    type: ClusterIP
    port: 8060
  database:
    name: repository_db

# ===================
# COS
# ===================

cosEnable: false
cos:
  bucket: BUCKETNAME-CHANGEME
  claimName: gateway-claim
  endpoint: ENDPOINT-CHANGEME
  secretName: SECRETNAME-CHANGEME
  storageClassName: STORAGECLASSNAME-CHANGEME
  storageSize: 10Gi
